// Mocks generated by Mockito 5.4.2 from annotations
// in number_trivia_clean_architecture_tdd/test/features/number_trivia/data/datasources/number_trivia_remote_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:number_trivia_clean_architecture_tdd/core/api/api_consumer.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DioConsumer].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioConsumer extends _i1.Mock implements _i2.DioConsumer {
  @override
  _i3.Future<dynamic> get({
    required String? endpoint,
    Map<String, dynamic>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #endpoint: endpoint,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}
